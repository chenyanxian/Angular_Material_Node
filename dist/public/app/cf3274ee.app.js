"use strict";angular.module("cycloneApp",["ngCookies","ngResource","ngSanitize","ui.router","ngMaterial"]).config(["$stateProvider","$urlRouterProvider","$locationProvider","$httpProvider",function(a,b,c,d){b.otherwise("/"),c.html5Mode(!0),d.interceptors.push("authInterceptor")}]).factory("authInterceptor",["$rootScope","$q","$cookieStore","$location",function(a,b,c,d){return{request:function(a){return a.headers=a.headers||{},c.get("token")&&(a.headers.Authorization="Bearer "+c.get("token")),a},responseError:function(a){return 401===a.status?(d.path("/login"),c.remove("token"),b.reject(a)):b.reject(a)}}}]).run(["$rootScope","$location","Auth",function(a,b,c){a.$on("$stateChangeStart",function(a,d){c.isLoggedInAsync(function(a){d.authenticate&&!a&&b.path("/login")})})}]),angular.module("cycloneApp").controller("TestManagermentCtrl",["$http","$scope",function(a,b){a.post("/api/apiss/import",[]).success(function(a){});var c="5576952f4d521d1e480413c5,5576952f4d521d1e480413c6,5576952f4d521d1e480413c7";a.post("/api/apiss/batchDelete",{ids:c}).success(function(a){console.log(a)})}]),angular.module("cycloneApp").config(["$stateProvider",function(a){a.state("TestManagerment",{url:"/TestManagerment",templateUrl:"app/TestManagerment/TestManagerment.html",controller:"TestManagermentCtrl"})}]),angular.module("cycloneApp").controller("AccessCtrl",["$rootScope","$scope","$http",function(a,b,c){var d=function(){c.get("/api/access").success(function(b){a.allData=b})};d(),a.$on("reloadList",function(a,b){d()}),b.accessAdd=function(){""!==b.name&&(c.post("/api/access",{name:b.name,gender:b.gender,hobby:b.hobby}),b.name="",b.gender="",b.hobby="",d())},b.deleteData=function(a){c["delete"]("/api/access/"+a._id),d()}}]).controller("accessEdit",["$rootScope","$scope","$http","$stateParams","$state",function(a,b,c,d,e){b.editData=null,b.isShow=!0;var f=d.id;c.get("/api/access/"+f).success(function(a){b.editData=a}),b.save=function(){console.log(f);var a={_id:f,name:b.editData.name,gender:b.editData.gender,hobby:b.editData.hobby};c.put("/api/access/"+f,a).success(function(a){console.log(a),b.isShow=!1,e.go("access")})}}]),angular.module("cycloneApp").config(["$stateProvider",function(a){a.state("access",{url:"/access",templateUrl:"app/access/access.html",controller:"AccessCtrl"}).state("editAccess",{url:"/edit/{id}",templateUrl:"app/access/edit.html",controller:"accessEdit"})}]),angular.module("cycloneApp").config(["$stateProvider",function(a){a.state("login",{url:"/login",templateUrl:"app/account/login/login.html",controller:"LoginCtrl"}).state("signup",{url:"/signup",templateUrl:"app/account/signup/signup.html",controller:"SignupCtrl"}).state("settings",{url:"/settings",templateUrl:"app/account/settings/settings.html",controller:"SettingsCtrl",authenticate:!0})}]),angular.module("cycloneApp").controller("LoginCtrl",["$scope","Auth","$location","$window",function(a,b,c,d){a.user={},a.errors={},a.login=function(d){a.submitted=!0,d.$valid&&b.login({email:a.user.email,password:a.user.password}).then(function(){c.path("/")})["catch"](function(b){a.errors.other=b.message})},a.loginOauth=function(a){d.location.href="/auth/"+a}}]),angular.module("cycloneApp").controller("SettingsCtrl",["$scope","User","Auth",function(a,b,c){a.errors={},a.changePassword=function(b){a.submitted=!0,b.$valid&&c.changePassword(a.user.oldPassword,a.user.newPassword).then(function(){a.message="Password successfully changed."})["catch"](function(){b.password.$setValidity("mongoose",!1),a.errors.other="Incorrect password",a.message=""})}}]),angular.module("cycloneApp").controller("SignupCtrl",["$scope","Auth","$location","$window",function(a,b,c,d){a.user={},a.errors={},a.register=function(d){a.submitted=!0,d.$valid&&b.createUser({name:a.user.name,email:a.user.email,password:a.user.password}).then(function(){c.path("/")})["catch"](function(b){b=b.data,a.errors={},angular.forEach(b.errors,function(b,c){d[c].$setValidity("mongoose",!1),a.errors[c]=b.message})})},a.loginOauth=function(a){d.location.href="/auth/"+a}}]),angular.module("cycloneApp").controller("AdminCtrl",["$scope","$http","Auth","User",function(a,b,c,d){a.users=d.query(),a["delete"]=function(b){d.remove({id:b._id}),angular.forEach(a.users,function(c,d){c===b&&a.users.splice(d,1)})}}]),angular.module("cycloneApp").config(["$stateProvider",function(a){a.state("admin",{url:"/admin",templateUrl:"app/admin/admin.html",controller:"AdminCtrl"})}]),angular.module("cycloneApp").controller("ApisCtrl",["$rootScope","$scope","apis","$http","$timeout",function(a,b,c,d,e){b.gridHeader=c.gridHeaderArray,b.bwGridSelectAll=!1,d.get("/api/apiss/").success(function(a){b.gridRow=a,b.gridRow.forEach(function(a){a.gridRowSelectedProperty=!1})})}]).controller("ApisLevel2Ctrl",["$scope","$http","$stateParams",function(a,b,c){b.get("/api/apiss/").success(function(b){var d=c.instanceId;b.forEach(function(b,c){b._id===d&&(a.itemName=b.apiName)})})}]).controller("ApiDetailCtrl",["$scope","$http","ApiDataConfig",function(a,b,c){a.apiParamHeader=c.apiParamHeader,a.apiResponseHeader=c.apiResponseHeader;var d=function(){b.get("/api/serverdatas").success(function(c){a.resourceList=c[0],b.get("/api/serverdatas/resourcedetail").success(function(b){a.ApiDetailData=b[0].resourcedetaildata,console.log(a.ApiDetailData)})})};d(),a.expand_method=function(){}}]).controller("ApiYmalDetailCtrl",["$scope","$http","ApiDataConfig",function(a,b,c){a.aceLoaded=function(a){a.setReadOnly(!0)},a.aceChanged=function(a){}}]).factory("ApiDataConfig",function(){var a=[{header:"DESCRIPTION",property:"description"},{header:"NAME",property:"name"},{header:"PARAMETER TYPE",property:"paramtype"},{header:"REQUIRED",property:"required"},{header:"TYPE",property:"type"}],b=[{header:"CODE",property:"code"},{header:"MESSAGE",property:"message"}],c={apiParamHeader:a,apiResponseHeader:b};return c}),angular.module("cycloneApp").factory("apisFactory",function(){var a=[{header:"API NAME",property:"apiName",isDefaultSortColumn:!0},{header:"RESOURCE",property:"resource"},{header:"UPLOAD",property:"upload"},{header:"LAST MODIFIED",property:"lastModify"}],b={gridHeaderArray:a};return b}),angular.module("cycloneApp").config(["$stateProvider",function(a){a.state("apis",{url:"/apis",templateUrl:"app/apis/apis.html",controller:"ApisCtrl"}).state("apis.level2",{url:"/:instanceId",views:{"@":{templateUrl:"app/apis/apis.level2.html",controller:"ApisLevel2Ctrl"}}}).state("apis.level2.document",{url:"/document",templateUrl:"app/apis/document.html",controller:"ApiDetailCtrl"}).state("apis.level2.test",{url:"/test",templateUrl:"app/apis/test.html",controller:"ApisCtrl"}).state("apis.level2.document.detail",{url:"/:id",templateUrl:"app/apis/document.detail.html",controller:"ApiDetailCtrl"}).state("apis.level2.ymal",{url:"/ymal",templateUrl:"app/apis/ymal.html",controller:"ApiYmalDetailCtrl"}).state("apiDetail",{url:"/api_detail",templateUrl:"app/apis/api_detail.html",controller:"ApiDetailCtrl"})}]),angular.module("cycloneApp").factory("apis",function(){var a=[{header:"check_box",columnStyle:"checkbox"},{header:"API NAME",property:"apiName",columnStyle:"name",isDefaultSortColumn:!0},{header:"RESOURCE",property:"resource",columnStyle:""},{header:"TESTS",property:"tests",columnStyle:""},{header:"UPLOAD",property:"upload",columnStyle:""},{header:"LAST MODIFIED",property:"lastModify",columnStyle:""}],b={gridHeaderArray:a};return b}),angular.module("cycloneApp").controller("MainCtrl",["$scope","$http",function(a,b){a.awesomeThings=[],b.get("/api/things").success(function(b){a.awesomeThings=b}),a.addThing=function(){""!==a.newThing&&(b.post("/api/things",{name:a.newThing}),a.newThing="")},a.deleteThing=function(a){b["delete"]("/api/things/"+a._id)}}]),angular.module("cycloneApp").config(["$stateProvider",function(a){a.state("main",{url:"/",templateUrl:"app/main/main.html",controller:"MainCtrl"})}]),angular.module("cycloneApp").config(["$stateProvider",function(a){a.state("todo",{url:"/todo",templateUrl:"app/todo/todo.html",resolve:{todos:["Todo",function(a){return a.query().$promise}]},controller:"TodoCtrl"})}]).controller("TodoCtrl",["$scope","$resource","Todo","todos",function(a,b,c,d){a.data={},a.data.todos=d,a.$on("todoAdd",function(b,d){c.save(d,function(b){console.log("item created",b),a.data.todos.push(b)})}),a.$on("todoUpdate",function(a,b){c.update({id:b._id},b,function(a){console.log("item updated",a)})}),a.$on("todoDelete",function(b,c){c.$delete(function(b){console.log("item deleted",b),_.remove(a.data.todos,function(a){return a._id===c._id})})})}]),angular.module("cycloneApp").directive("todoDesc",["$resource","$timeout",function(a,b){var c=function(a,c){c.click(function(){a.$apply(function(){a.todo.isEditing=!0}),b(function(){c.next().focus()},100)})};return{restrict:"A",scope:!1,link:c}}]),angular.module("cycloneApp").factory("Todo",["$resource",function(a){return a("/api/todos/:id",{id:"@_id"},{update:{method:"PUT",params:{id:"@_id"}}})}]),angular.module("cycloneApp").factory("Auth",["$location","$rootScope","$http","User","$cookieStore","$q",function(a,b,c,d,e,f){var g={};return e.get("token")&&(g=d.get()),{login:function(a,b){var h=b||angular.noop,i=f.defer();return c.post("/auth/local",{email:a.email,password:a.password}).success(function(a){return e.put("token",a.token),g=d.get(),i.resolve(a),h()}).error(function(a){return this.logout(),i.reject(a),h(a)}.bind(this)),i.promise},logout:function(){e.remove("token"),g={}},createUser:function(a,b){var c=b||angular.noop;return d.save(a,function(b){return e.put("token",b.token),g=d.get(),c(a)},function(a){return this.logout(),c(a)}.bind(this)).$promise},changePassword:function(a,b,c){var e=c||angular.noop;return d.changePassword({id:g._id},{oldPassword:a,newPassword:b},function(a){return e(a)},function(a){return e(a)}).$promise},getCurrentUser:function(){return g},isLoggedIn:function(){return g.hasOwnProperty("role")},isLoggedInAsync:function(a){g.hasOwnProperty("$promise")?g.$promise.then(function(){a(!0)})["catch"](function(){a(!1)}):a(g.hasOwnProperty("role")?!0:!1)},isAdmin:function(){return"admin"===g.role},getToken:function(){return e.get("token")}}}]),angular.module("cycloneApp").factory("User",["$resource",function(a){return a("/api/users/:id/:controller",{id:"@_id"},{changePassword:{method:"PUT",params:{controller:"password"}},get:{method:"GET",params:{id:"me"}}})}]),angular.module("cycloneApp").directive("mongooseError",function(){return{restrict:"A",require:"ngModel",link:function(a,b,c,d){b.on("keydown",function(){return d.$setValidity("mongoose",!0)})}}}),angular.module("cycloneApp").controller("NavbarCtrl",["$scope","$location","Auth",function(a,b,c){a.menu=[{title:"Home",link:"/"},{title:"APIS",link:"/apis"}],a.isCollapsed=!0,a.isLoggedIn=c.isLoggedIn,a.isAdmin=c.isAdmin,a.getCurrentUser=c.getCurrentUser,a.logout=function(){c.logout(),b.path("/login")},a.isActive=function(a){return a===b.path()}}]),angular.module("cycloneApp").run(["$templateCache",function(a){a.put("app/TestManagerment/TestManagerment.html","<div class=col-md-12>This is the TestManagerment view.</div>"),a.put("app/access/access.html",'<div class=col-md-12 ng-controller=AccessCtrl><ul><li><strong>name:</strong><input ng-model="name"></li><li><strong>gender:</strong><input ng-model="gender"></li><li><strong>hobby:</strong><input ng-model="hobby"></li></ul><button ng-click=accessAdd()>ADD</button><br><br><ul><li class=head ng-show="allData.length!=0"><span>name</span> <span>gender</span> <span>hobby</span> <span>operate</span></li><li ng-repeat="item in allData"><span>{{item.name}}</span> <span>{{item.gender}}</span> <span>{{item.hobby}}</span> <button ng-click=deleteData(item)>delete</button> <button ui-sref=editAccess({id:item._id})>edit</button></li></ul><!--<div ui-view></div>--></div>'),a.put("app/access/edit.html","<div ng-if=isShow><div>Edit page</div><ul><li><strong>name:</strong><input ng-model=editData.name></li><li><strong>name:</strong><input ng-model=editData.gender></li><li><strong>name:</strong><input ng-model=editData.hobby></li></ul><button ng-click=save()>save</button></div><!--\n1：在列表页面，点击Edit按钮，跳转到Edit页面（带参数ID）\n2: 在Edit页面，根据传递过来的I查询数据库返回一个对象，并且把这个对象给绑定到Edit页面\n3: 修改过后保存\n4:保存成功后页面根据ui－view跳转-->"),a.put("app/account/login/login.html",'<div class=container><div class=row><div class=col-sm-12><h1>Login</h1><!--<p>Accounts are reset on server restart from <code>server/config/seed.js</code>. Default account is <code>test@test.com</code>\n                / <code>test</code></p>\n\n            <p>Admin account is <code>admin@admin.com</code> / <code>admin</code></p>--></div><div class=col-sm-12><form class=form name=form ng-submit=login(form) novalidate><md-content layout-padding class=autoScroll><md-input-container><label>Email</label><input type=email name=email class=form-control ng-model=user.email required></md-input-container><md-input-container><label>Password</label><input type=password name=password class=form-control ng-model=user.password required></md-input-container><div class="form-group has-error"><p class=help-block ng-show="form.email.$error.required && form.password.$error.required && submitted">Please enter your email and password.</p><p class=help-block ng-show="form.email.$error.email && submitted">Please enter a valid email.</p><p class=help-block>{{ errors.other }}</p></div><div><md-button class=md-raised type=submit>Login</md-button><a href=/signup><md-button class=md-raised>Register</md-button></a></div><hr></md-content><div><a class="btn btn-facebook" href="" ng-click="loginOauth(\'facebook\')"><md-button class="md-raised md-primary"><i class="fa fa-facebook"></i> Connect with Facebook</md-button></a> <a class="btn btn-google-plus" href="" ng-click="loginOauth(\'google\')"><md-button class="md-raised md-primary"><i class="fa fa-google-plus"></i> Connect with Google+</md-button></a> <a class="btn btn-twitter" href="" ng-click="loginOauth(\'twitter\')"><md-button class="md-raised md-primary"><i class="fa fa-twitter"></i> Connect with Twitter</md-button></a></div></form></div></div></div>'),a.put("app/account/settings/settings.html",'<div class=container><div class=row><div class=col-sm-12><h1>Change Password</h1></div><div class=col-sm-12><form class=form name=form ng-submit=changePassword(form) novalidate><div class=form-group><md-input-container><label>Current Password</label><input type=password name=password class=form-control ng-model=user.oldPassword mongoose-error></md-input-container><p class=help-block ng-show=form.password.$error.mongoose>{{ errors.other }}</p></div><div class=form-group><md-input-container><label>New Password</label><input type=password name=newPassword class=form-control ng-model=user.newPassword ng-minlength=3 required></md-input-container><p class=help-block ng-show="(form.newPassword.$error.minlength || form.newPassword.$error.required) && (form.newPassword.$dirty || submitted)">Password must be at least 3 characters.</p></div><p class=help-block>{{ message }}</p><md-button class=md-raised type=submit>Save changes</md-button></form></div></div></div>'),a.put("app/account/signup/signup.html",'<div class=container><div class=row><div class=col-sm-12><h1>Sign up</h1></div><div class=col-sm-12><form class=form name=form ng-submit=register(form) novalidate><div class=form-group ng-class="{ \'has-success\': form.name.$valid && submitted,\n                                            \'has-error\': form.name.$invalid && submitted }"><md-input-container><label>Name</label><input name=name class=form-control ng-model=user.name required></md-input-container><p class=help-block ng-show="form.name.$error.required && submitted">A name is required</p></div><div class=form-group ng-class="{ \'has-success\': form.email.$valid && submitted,\n                                            \'has-error\': form.email.$invalid && submitted }"><md-input-container><label>Email</label><input type=email name=email class=form-control ng-model=user.email required mongoose-error></md-input-container><p class=help-block ng-show="form.email.$error.email && submitted">Doesn\'t look like a valid email.</p><p class=help-block ng-show="form.email.$error.required && submitted">What\'s your email address?</p><p class=help-block ng-show=form.email.$error.mongoose>{{ errors.email }}</p></div><div class=form-group ng-class="{ \'has-success\': form.password.$valid && submitted,\n                                            \'has-error\': form.password.$invalid && submitted }"><md-input-container><label>Password</label><input type=password name=password class=form-control ng-model=user.password ng-minlength=3 required mongoose-error></md-input-container><p class=help-block ng-show="(form.password.$error.minlength || form.password.$error.required) && submitted">Password must be at least 3 characters.</p><p class=help-block ng-show=form.password.$error.mongoose>{{ errors.password }}</p></div><div><md-button class=md-raised type=submit>Sign up</md-button><a href=/login><md-button class=md-raised>Login</md-button></a></div><hr><div><a class="btn btn-facebook" href="" ng-click="loginOauth(\'facebook\')"><md-button class="md-raised md-primary"><i class="fa fa-facebook"></i> Connect with Facebook</md-button></a> <a class="btn btn-google-plus" href="" ng-click="loginOauth(\'google\')"><md-button class="md-raised md-primary"><i class="fa fa-google-plus"></i> Connect with Google+</md-button></a> <a class="btn btn-twitter" href="" ng-click="loginOauth(\'twitter\')"><md-button class="md-raised md-primary"><i class="fa fa-twitter"></i> Connect with Twitter</md-button></a></div></form></div></div><hr></div>'),a.put("app/admin/admin.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container><p>The delete user and user index api routes are restricted to users with the \'admin\' role.</p><ul class=list-group><li class=list-group-item ng-repeat="user in users"><strong>{{user.name}}</strong><br><span class=text-muted>{{user.email}}</span> <a ng-click=delete(user) class=trash><span class="glyphicon glyphicon-trash pull-right"></span></a></li></ul></div>'),a.put("app/apis/apis.html",'<div class=apis-top-contend><label class=apis-top-label>APIs</label><md-button class="import-button md-raised md-primary">Import API</md-button></div><div class=col-md-12 ng-controller=ApisCtrl><md-content><md-card><md-card-content><table class=md-card-content-table><tbody><tr class=colunmHeader><td class={{column.header}} ng-repeat="column in gridHeader" ng-click=changeSorting(column.property) ng-switch=column.columnStyle><div ng-switch-default><div class="head_cell_content tibco-grid-unsortable"><span class=cell-value>{{column.header}}</span></div></div><div ng-switch-when=name><div class=head_cell_content><span class=cell-value>{{column.header}}</span></div></div><div class=check_box ng-switch-when=checkbox><md-checkbox ng-model=bwGridSelectAll ng-change=selectAllRows() class=md-warn></md-checkbox></div></td><td><md-select ng-model=columns placeholder=columns><md-option ng-repeat="column in columns" value={{column}}>{{column}}</md-option></md-select></td></tr><tr class=dataView data-id=row.id ng-repeat="(indexOfRow, row) in gridRow |orderBy:sort.column:sort.descending"><td ng-repeat="column in gridHeader" ng-switch=column.columnStyle><div ng-switch-default><div class="head_cell_content tibco-grid-unsortable"><span class=cell-value>{{row[column.property]}}</span></div></div><div ng-switch-when=name><div class=head_cell_content><a ui-sref="apis.level2.document({instanceId: row._id})"><span class=cell-value>{{row[column.property]}}</span></a></div></div><div class=check_box ng-switch-when=checkbox><md-checkbox ng-model=row.gridRowSelectedProperty ng-change="selectOneRow(row, gridRow, indexOfRow)" class=md-warn></md-checkbox></div></td></tr></tbody></table></md-card-content></md-card></md-content></div>'),a.put("app/apis/apis.level2.html",'<div class=apis-top-contend><label class=apis-top-label ui-sref=apis>{{itemName}}</label><md-button class="import-button md-raised md-primary">Add Test</md-button></div><div class=tabsdemoDynamicHeight><md-content class=md-padding><md-tabs md-dynamic-height="" md-selected=1 md-border-bottom=""><md-tab><md-tab-label><span ui-sref=kaapi.level2.test>Tests</span></md-tab-label></md-tab><md-tab><md-tab-label><span ui-sref=apis.level2.document>Document</span></md-tab-label></md-tab><md-tab><md-tab-label><span ui-sref=apis.level2.ymal>YMAL</span></md-tab-label></md-tab></md-tabs></md-content></div><div ui-view></div>'),a.put("app/apis/document.detail.html",'<div class=api_detail_cont><div class=item><dl class=sub_item><dt><strong>pet:</strong>Everything about your Pets</dt><dd ng-repeat="(itemIndex,item) in ApiDetailData" class="status_expand status_{{item.operations[0].method}}" ng-click=expand_method(itemIndex)><dl><dt class="method method_{{item.operations[0].method}}"><strong>{{item.operations[0].method}}</strong><span>{{item.path}}</span></dt><dd class=method_cont><!--<div class="method_detail" ng-repeat="detail in method.detail" ng-switch="detail.title">--><div class=method_detail><h3>description</h3><p>{{item.operations[0].summary}}</p><!--<ul>--><!--<li ng-repeat="column in detail.header"><strong>{{column.name}}</strong></li>--><!--</ul>--><h3>Parameters</h3><ul><li ng-repeat="column in apiParamHeader"><strong>{{column.header}}</strong></li></ul><ul ng-repeat="(rowindex,row) in item.operations[0].parameters" ng-class=""><li ng-repeat="column in apiParamHeader">{{row[column.property]}}</li><!--<li>{{row.description}}</li>\n                                <li>{{row.name}}</li>\n                                <li>{{row.paramType}}</li>\n                                <li>{{row.required}}</li>\n                                <li>{{row.type}}</li>--></ul><h3>Responses</h3><ul><li ng-repeat="column in apiResponseHeader"><strong>{{column.header}}</strong></li></ul><ul ng-repeat="(rowindex,row) in item.operations[0].responseMessages" ng-class=""><li ng-repeat="column in apiResponseHeader">{{row[column.property]}}</li></ul></div></dd></dl></dd></dl></div></div>'),a.put("app/apis/document.html",'<md-content><div class=api_detail_content ng-controller=ApiDetailCtrl><ul class=api_detail_tabs><li ui-sref=apis.level2.document.detail({id:item.path}) ng-repeat="item in resourceList.resouces" title={{item.path}}>{{item.path}}</li></ul><div class=api_detail_content_right ui-view=""></div></div></md-content>'),a.put("app/main/main.html",'<header class=hero-unit id=banner><div class=container><h1>\'Allo, \'Allo!</h1><p class=lead>Kick-start your next web app with Angular Fullstack</p><img src=assets/images/d535427a.yeoman.png alt="I\'m Yeoman"></div></header><div class=container><div class=row><div class=col-lg-12><h1 class=page-header>Features:</h1><ul class="nav nav-tabs nav-stacked col-md-4 col-lg-4 col-sm-6" ng-repeat="thing in awesomeThings"><li><a href=# tooltip={{thing.info}}>{{thing.name}}</a></li></ul></div></div></div><footer class=footer><div class=container><p>Angular Fullstack v2.0.13 | <a href=https://twitter.com/tyhenkel>@tyhenkel</a> | <a href="https://github.com/DaftMonk/generator-angular-fullstack/issues?state=open">Issues</a></p></div></footer>'),a.put("app/todo/todo.html",'<div class=col-md-12><md-content><md-card><md-card-content><h2 class=md-title>TODO list</h2><div class=todo-new><div layout=column><br><md-content layout-padding><md-input-container class="md-icon-float column"><form ng-submit="$emit(\'todoAdd\', newTodo)"><!-- Use floating label instead of placeholder --><label>Description</label><md-icon md-svg-src=img/icons/ic_person_24px.svg class=todo-desc>Description</md-icon><input ng-model=newTodo.desc><md-button class="md-raised md-primary" type=submit>Add</md-button></form></md-input-container></md-content><md-content layout-padding class=autoScroll class=todo-list><li class=todo-list-item ng-repeat="(index, todo) in data.todos | orderBy: \'-_id\' "><md-checkbox ng-model=todo.isDone ng-change=" $emit(\'todoUpdate\', todo)"></md-checkbox><p md-list-item-text class=todo-desc ng-hide=todo.isEditing todo-desc>{{todo.desc}}</p><input md-list-item-text class=todo-desc-editing ng-model=todo.desc ng-show=todo.isEditing value={{todo.desc}} ng-change="$emit(\'todoUpdate\', todo)" ng-blur="todo.isEditing = false"><md-icon md-svg-icon=md-close ng-click="$emit(\'todoDelete\', todo)"></md-icon></li></md-content></div></div></md-card-content></md-card></md-content></div>'),a.put("components/navbar/navbar.html",'<div class="navbar navbar-default navbar-static-top" ng-controller=NavbarCtrl><div class=container><!--<div class="navbar-header">\n          <button class="navbar-toggle" type="button" ng-click="isCollapsed = !isCollapsed">\n            <span class="sr-only">Toggle navigation</span>\n            <span class="icon-bar"></span>\n            <span class="icon-bar"></span>\n            <span class="icon-bar"></span>\n          </button>\n          <a href="/" class="navbar-brand">cyclone</a>\n        </div>--><div collapse=isCollapsed class="navbar-collapse collapse" id=navbar-main><ul class="nav navbar-nav"><section layout=row layout-sm=column><li ng-repeat="item in menu" ng-class="{active: isActive(item.link)}"><a ng-href={{item.link}}><md-button>{{item.title}}</md-button></a></li><li ng-show=isAdmin() ng-class="{active: isActive(\'/admin\')}"><a href=/admin><md-button>Admin</md-button></a></li></section></ul><ul class="nav navbar-nav navbar-right"><section layout=row layout-sm=column><li ng-hide=isLoggedIn() ng-class="{active: isActive(\'/signup\')}"><a href=/signup><md-button>Sign up</md-button></a></li><li ng-hide=isLoggedIn() ng-class="{active: isActive(\'/login\')}"><a href=/login><md-button>Login</md-button></a></li><li ng-show=isLoggedIn()><md-button>Hello {{getCurrentUser().name }}</md-button></li><li ng-show=isLoggedIn() ng-class="{active: isActive(\'/settings\')}"><a href=/settings><md-button class=md-icon-button aria-label=Settings>Set</md-button></a></li><li ng-show=isLoggedIn() ng-class="{active: isActive(\'/logout\')}"><a href="" ng-click=logout()><md-button>Logout</md-button></a></li></section></ul></div></div></div>')}]);